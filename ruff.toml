# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

target-version = "py313"
line-length = 120
preview = true
unsafe-fixes = true
fix = true
show-fixes = true

[lint]
select = ["ALL"]
ignore = [
    "C90",     # <...> too complex
    "COM812",  # Conflicts with formatter
    "CPY001",  # Missing copyright notice at top of file
    "DOC501",  # Errors in docstring
    "ISC001",  # Conflicts with formatter
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "S101",    # Use of assert detected
    "S404",    # `subprocess` module is possibly insecure
    "S603",    # `subprocess` call: check for execution of untrusted input
    "S607",    # Starting a process with a partial executable path
    "TID252",  # Prefer absolute imports over relative imports from parent modules
    "T20",     # print statement used
]
isort.required-imports = ["from __future__ import annotations"]

[lint.flake8-tidy-imports.banned-api]
"typing.Callable".msg = "Use collections.abc.Callable instead."
"typing.Iterator".msg = "Use collections.abc.Iterator instead."
"typing.Mapping".msg = "Use collections.abc.Mapping instead."
"typing.Sequence".msg = "Use collections.abc.Sequence instead."
"typing.Set".msg = "Use collections.abc.Set instead."

[lint.pydocstyle]
convention = "google"
